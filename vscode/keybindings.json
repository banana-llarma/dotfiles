[
    // arrow key
    { "key": "ctrl+up", "command": "editor.action.insertCursorAbove", "when": "editorTextFocus" },
    { "key": "ctrl+down", "command": "editor.action.insertCursorBelow", "when": "editorTextFocus" },
    { "key": "ctrl+alt+up", "command": "workbench.action.moveEditorToAboveGroup" },
    { "key": "ctrl+alt+down", "command": "workbench.action.moveEditorToBelowGroup" },
    { "key": "ctrl+alt+left", "command": "workbench.action.moveEditorToLeftGroup" },
    { "key": "ctrl+alt+right", "command": "workbench.action.moveEditorToRightGroup" },
    { "key": "alt+up", "command": "workbench.action.focusAboveGroup" },
    { "key": "alt+down", "command": "workbench.action.focusBelowGroup" },
    { "key": "alt+left", "command": "workbench.action.focusLeftGroup" },
    { "key": "alt+right", "command": "workbench.action.focusRightGroup" },
    { "key": "shift+alt+up", "command": "editor.action.moveLinesUpAction", "when": "editorTextFocus && !editorReadonly" },
    { "key": "shift+alt+down", "command": "editor.action.moveLinesDownAction", "when": "editorTextFocus && !editorReadonly" },
    { "key": "shift+alt+left", "command": "editor.action.moveCarretLeftAction" },
    { "key": "shift+alt+right", "command": "editor.action.moveCarretRightAction" },

    // panles
    { "key": "ctrl+shift+x", "command": "workbench.view.extensions" },
    { "key": "ctrl+shift+x", "command": "workbench.action.closeSidebar", "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'" },
    { "key": "ctrl+shift+s", "command": "workbench.view.search" },
    { "key": "ctrl+shift+s", "command": "workbench.action.closeSidebar", "when": "searchViewletVisible" },
    { "key": "ctrl+shift+r", "command": "workbench.action.replaceInFiles" },
    { "key": "ctrl+shift+r", "command": "workbench.action.closeSidebar", "when": "searchViewletVisible" },
    { "key": "ctrl+shift+f", "command": "workbench.view.explorer" },
    { "key": "ctrl+shift+f", "command": "workbench.action.closeSidebar", "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'" },
    { "key": "ctrl+n", "command": "explorer.newFile", "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'" },
    { "key": "backspace", "command": "deleteFile", "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
    { "key": "ctrl+d", "command": "explorer.newFolder", "when": "explorerViewletVisible && filesExplorerFocus"},

    // other
    { "key": "ctrl+t", "command": "workbench.action.terminal.toggleTerminal", "when": "terminal.active" },
    { "key": "ctrl+n", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
    { "key": "ctrl+tab", "command": "workbench.action.nextEditor" },
    { "key": "ctrl+shift+tab", "command": "workbench.action.previousEditor" },
    { "key": "ctrl+shift+n", "command": "editor.action.addSelectionToPreviousFindMatch" },
    { "key": "ctrl+r", "command": "editor.action.startFindReplaceAction", "when": "editorFocus || editorIsOpen" },
    { "key": "ctrl+h", "command": "editor.action.showHover", "when": "editorTextFocus" },
    { "key": "ctrl+/", "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },
    { "key": "ctrl+shift+a", "command": "editor.action.selectHighlights", "when": "editorFocus" },
    { "key": "ctrl+a", "command": "editor.action.replaceAll", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+alt+enter", "command": "-editor.action.replaceAll", "when": "editorFocus && findWidgetVisible" },
    { "key": "alt+r", "command": "workbench.action.openRecent" },
    { "key": "ctrl+r", "command": "-workbench.action.openRecent" },
    { "key": "ctrl+l", "command": "editor.action.reindentlines" },
    { "key": "ctrl+[", "command": "editor.fold", "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+]", "command": "editor.unfold", "when": "editorTextFocus && foldingEnabled" },
    { "key": "ctrl+d", "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "ctrl+shift+n", "command": "jumpToPrevSnippetPlaceholder", "when": "editorTextFocus && hasPrevTabstop && inSnippetMode" },

    // unmap
    { "key": "ctrl+d", "command": "-editor.action.addSelectionToNextFindMatch", "when": "editorFocus"},
    { "key": "ctrl+n", "command": "-workbench.action.files.newUntitledFile"},
    { "key": "ctrl+r", "command": "renameFile", "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "ctrl+n", "command": "jumpToNextSnippetPlaceholder", "when": "editorTextFocus && hasNextTabstop && inSnippetMode" },
    { "key": "tab", "command": "-jumpToNextSnippetPlaceholder", "when": "editorTextFocus && hasNextTabstop && inSnippetMode" },
    {
        "key": "shift+tab",
        "command": "-jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+shift+meta+p",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-insertNextSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "-insertBestCompletion",
        "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "-insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported"
    }
]